# in travis settings  
#  - Limit concurrent jobs: 1
#  - env: ANACONDA_LOGIN=...
#  - env: ANACONDA_PASSWORD=...
language: shell

os:
  - linux
  - osx
  - windows

osx_image: xcode11.2    # Python 3.7.4 running on macOS 10.14.4
dist: xenial

compiler:
  - gcc

addons:
  apt:
    sources:
    - ubuntu-toolchain-r-test
    packages:
    - gcc-9
    - g++-9

env:
  - PYTHON_VERSION=3.5
  - PYTHON_VERSION=3.6
  - PYTHON_VERSION=3.7 
  # - PYTHON_VERSION=3.8 

install:
  # linux
  - if [ "$TRAVIS_OS_NAME" = "linux" ];
    then
        sudo rm /usr/bin/c++;
        sudo ln -s /usr/bin/g++-9 /usr/bin/c++;
        ls -l /usr/bin/c++;
        wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
        bash miniconda.sh -b -p $HOME/miniconda;
        eval "$($HOME/miniconda/bin/conda shell.bash hook)";
        hash -r;
    fi
  # osx
  - if [ "$TRAVIS_OS_NAME" = "osx" ];
    then
        wget https://repo.anaconda.com/miniconda/Miniconda3-latest-MacOSX-x86_64.sh -O miniconda.sh;
        bash miniconda.sh -b -p $HOME/miniconda;
        eval "$($HOME/miniconda/bin/conda shell.bash hook)";
        hash -r;
    fi
  # windows # Need vs2019 for c++17
  - if [ "$TRAVIS_OS_NAME" = "windows" ];
    then
        export PATH="/c/tools/miniconda3/:/c/tools/miniconda3/Scripts:$PATH";
        choco install miniconda3 openssl.light;
        conda config --set ssl_verify no;
        choco install visualstudio2019community
        choco install visualstudio2019-workload-nativedesktop
        export VS160COMNTOOLS="/c/Program Files (x86)/Microsoft Visual Studio/2019/Community/Common7/Tools"
    fi
  # anaconda login
  - conda config --set always_yes yes --set changeps1 no 
  - conda update -q conda
  # build
  - conda create -q -n test-environment-$PYTHON_VERSION python=$PYTHON_VERSION conda-build conda-verify anaconda-client
  - source activate test-environment-$PYTHON_VERSION
  - conda info -a
  - echo Y | anaconda login --username $ANACONDA_LOGIN --password $ANACONDA_PASSWORD
  - conda build . --output-folder dist/conda-$PYTHON_VERSION --python=$PYTHON_VERSION -c agd-lbr
  - OUTPUT_FILE=`find dist/conda-$PYTHON_VERSION -name "*.tar.bz2"`
  - anaconda upload --force --user agd-lbr "$OUTPUT_FILE"
script:
  - echo "OK"


